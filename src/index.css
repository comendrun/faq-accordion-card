*,
::before,
::after {
  box-sizing: border-box;
}

html {
  margin: 0;
  padding: 0;
  font-family: "Kumbh Sans", sans-serif;
}

html:focus-within {
  scroll-behavior: smooth;
}

:root {
  --primary-text-very-dark-desaturated-blue: hsl(238, 29%, 16%);
  --primary-text-soft-red: hsl(14, 88%, 65%);

  --gradient-soft-violet: hsl(273, 75%, 66%);
  --gradient-soft-blue: hsl(240, 73%, 65%);

  --neutral-text-light-grayish-blue: hsl(240, 5%, 91%);
  --neutral-text-very-dark-grayish-blue: hsl(237, 12%, 33%);

  --dividers-light-grayish-blue: hsl(240, 5%, 91%);
}

#root {
  margin: 0;
  padding: 0;
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
  display: flex;
  align-items: center;
  justify-content: center;
  align-content: center;
}

.App {
  width: 100%;
  min-height: 100vh;
  margin: 0;
  padding: 0;
  background: linear-gradient(
    var(--gradient-soft-violet),
    var(--gradient-soft-blue)
  );
  display: flex;
  flex-direction: column;
}

.container {
  background-color: hsl(0, 0%, 100%);
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: auto;
  box-shadow: -1em 1em 3em rgba(0, 0, 0, 0.1), 1em 1em 3em rgba(0, 0, 0, 0.1);
  width: 90%;
  /* flex-wrap: wrap; */
  margin-top: 130px;
  border-radius: 30px;
  padding-inline: 2rem;
  padding-bottom: 3rem;
}

.desktop-box {
  display: none;
}

.image-container-desktop {
  display: none;
}

.image-container-mobile {
  display: flex;
  flex-direction: column;
  margin-top: -110px;
  width: calc(13rem + 10vw);
}

.image-container-mobile * {
  width: 100%;
}

.mobile-shadow {
  display: inline;
  margin-top: -70px;
}

.each-collapsible {
  width: 100%;
}

.each-collapsible * {
  text-align: justify;
}

.title {
  margin: auto;
  text-align: center;
  margin-bottom: 1rem;
}

.Q-A {
  display: flex;
  flex-direction: column;
}

.question {
  display: flex;
  justify-content: space-between;
  align-items: center;
  color: var(--primary-text-very-dark-desaturated-blue);
  margin-bottom: 0;
  font-size: 1rem;
}

.question:hover {
  color: var(--primary-text-soft-red);
}

.question-selected {
  font-weight: 700;
}

.question,
.answer {
  font-size: 0.9rem;
}

.arrow-down {
  margin-left: auto;
  transition: all 0.4s ease;
}

.arrow-up {
  transform: rotate(180deg);
  transition: all 0.4s ease;
}

/* ---- i finally was able to add transition to a react app, thanks to  https://stackoverflow.com/questions/50789876/css-transitions-in-react-not-working-when-state-becomes-true */
.answer {
  color: var(--neutral-text-very-dark-grayish-blue);
  width: 90%;
  transition: all 0.4s ease-out;
}

.hidden {
  visibility: hidden;
  transition: all 0.1s ease-in;
  height: 0;
  margin: 0;
  color: transparent;
}
/* i finally was able to add transition to a react app, thanks to  https://stackoverflow.com/questions/50789876/css-transitions-in-react-not-working-when-state-becomes-true ----*/

.line {
  margin-top: 1.5rem;
  color: var(--dividers-light-grayish-blue);
}

footer {
  text-align: center;
  color: hsl(0, 0%, 100%);
  font-size: 0.7rem;
}

footer a {
  color: hsl(14, 88%, 65%);
  text-decoration: none;
  font-weight: 700;
}

@media screen and (min-width: 800px) {
  .App {
    height: 100vh;
    display: flex;
  }
  .container {
    display: flex;
    flex-direction: row;
    min-width: 800;
    max-width: 920px;
    overflow: hidden;
    background-image: url(./images/bg-pattern-desktop.svg);
    background-repeat: no-repeat;
    background-size: 100%;
    background-position: -510px -260px;
    padding: 0;
    margin: auto;
  }
  .container * {
  }
  .image-container-mobile {
    display: none;
  }
  .image-container-desktop {
    display: flex;
    width: 500px;
    margin: 0;
    height: 500px;
    min-height: 100%;
    align-items: center;

    position: relative;
    left: -90px;
  }
  .desktop-box {
    z-index: +1;
  }
  .image-container-desktop > * {
    width: inherit;
    height: auto;
  }
  .desktop-main-image {
  }
  .desktop-box {
    display: inline;
    position: absolute;
    width: 200px;
  }
  .desktop-box-image {
    width: inherit;
    position: relative;
    left: -100px;
    bottom: -50px;
  }
  .text-box {
    max-width: 350px;
    margin: 2rem 0;
    padding: 0;
    position: relative;
    left: -35px;
  }

  .text-box * {
    padding: 0;
    margin: 5px;
  }

  .title {
    text-align: left;
    margin-bottom: 2rem;
  }
  footer {
    font-size: 1rem;
  }
}
